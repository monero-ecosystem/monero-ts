"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _GenUtils = _interopRequireDefault(require("../../common/GenUtils"));

/**
 * Monero subaddress model.
 */
class MoneroSubaddress {











  constructor(subaddress) {
    Object.assign(this, subaddress);
    if (this.balance !== undefined && typeof this.balance !== "bigint") this.balance = BigInt(this.balance);
    if (this.unlockedBalance !== undefined && typeof this.unlockedBalance !== "bigint") this.unlockedBalance = BigInt(this.unlockedBalance);
  }

  toJson() {
    let json = Object.assign({}, this);
    if (json.balance !== undefined) json.balance = json.balance.toString();
    if (json.unlockedBalance !== undefined) json.unlockedBalance = json.unlockedBalance.toString();
    return json;
  }

  getAccountIndex() {
    return this.accountIndex;
  }

  setAccountIndex(accountIndex) {
    this.accountIndex = accountIndex;
    return this;
  }

  getIndex() {
    return this.index;
  }

  setIndex(index) {
    this.index = index;
    return this;
  }

  getAddress() {
    return this.address;
  }

  setAddress(address) {
    this.address = address;
    return this;
  }

  getLabel() {
    return this.label;
  }

  setLabel(label) {
    this.label = label;
    return this;
  }

  getBalance() {
    return this.balance;
  }

  setBalance(balance) {
    this.balance = balance;
    return this;
  }

  getUnlockedBalance() {
    return this.unlockedBalance;
  }

  setUnlockedBalance(unlockedBalance) {
    this.unlockedBalance = unlockedBalance;
    return this;
  }

  getNumUnspentOutputs() {
    return this.numUnspentOutputs;
  }

  setNumUnspentOutputs(numUnspentOutputs) {
    this.numUnspentOutputs = numUnspentOutputs;
    return this;
  }

  getIsUsed() {
    return this.isUsed;
  }

  setIsUsed(isUsed) {
    this.isUsed = isUsed;
    return this;
  }

  getNumBlocksToUnlock() {
    return this.numBlocksToUnlock;
  }

  setNumBlocksToUnlock(numBlocksToUnlock) {
    this.numBlocksToUnlock = numBlocksToUnlock;
    return this;
  }

  toString(indent = 0) {
    let str = "";
    str += _GenUtils.default.kvLine("Account index", this.getAccountIndex(), indent);
    str += _GenUtils.default.kvLine("Subaddress index", this.getIndex(), indent);
    str += _GenUtils.default.kvLine("Address", this.getAddress(), indent);
    str += _GenUtils.default.kvLine("Label", this.getLabel(), indent);
    str += _GenUtils.default.kvLine("Balance", this.getBalance(), indent);
    str += _GenUtils.default.kvLine("Unlocked balance", this.getUnlockedBalance(), indent);
    str += _GenUtils.default.kvLine("Num unspent outputs", this.getNumUnspentOutputs(), indent);
    str += _GenUtils.default.kvLine("Is used", this.getIsUsed(), indent);
    str += _GenUtils.default.kvLine("Num blocks to unlock", this.getNumBlocksToUnlock(), indent);
    return str.slice(0, str.length - 1); // strip last newline
  }
}exports.default = MoneroSubaddress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,