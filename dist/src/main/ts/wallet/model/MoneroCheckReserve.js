"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _MoneroCheck = _interopRequireDefault(require("./MoneroCheck"));

/**
 * Results from checking a reserve proof.
 */
class MoneroCheckReserve extends _MoneroCheck.default {




  constructor(check) {
    super(check);
    if (this.totalAmount !== undefined && typeof this.totalAmount !== "bigint") this.totalAmount = BigInt(this.totalAmount);
    if (this.unconfirmedSpentAmount !== undefined && typeof this.unconfirmedSpentAmount !== "bigint") this.unconfirmedSpentAmount = BigInt(this.unconfirmedSpentAmount);
  }

  toJson() {
    let json = Object.assign({}, this);
    if (this.getTotalAmount() !== undefined) json.totalAmount = this.getTotalAmount().toString();
    if (this.getUnconfirmedSpentAmount() !== undefined) json.unconfirmedSpentAmount = this.getUnconfirmedSpentAmount().toString();
    return json;
  }

  getTotalAmount() {
    return this.totalAmount;
  }

  setTotalAmount(totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  getUnconfirmedSpentAmount() {
    return this.unconfirmedSpentAmount;
  }

  setUnconfirmedSpentAmount(unconfirmedSpentAmount) {
    this.unconfirmedSpentAmount = unconfirmedSpentAmount;
    return this;
  }
}exports.default = MoneroCheckReserve;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfTW9uZXJvQ2hlY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk1vbmVyb0NoZWNrUmVzZXJ2ZSIsIk1vbmVyb0NoZWNrIiwiY29uc3RydWN0b3IiLCJjaGVjayIsInRvdGFsQW1vdW50IiwidW5kZWZpbmVkIiwiQmlnSW50IiwidW5jb25maXJtZWRTcGVudEFtb3VudCIsInRvSnNvbiIsImpzb24iLCJPYmplY3QiLCJhc3NpZ24iLCJnZXRUb3RhbEFtb3VudCIsInRvU3RyaW5nIiwiZ2V0VW5jb25maXJtZWRTcGVudEFtb3VudCIsInNldFRvdGFsQW1vdW50Iiwic2V0VW5jb25maXJtZWRTcGVudEFtb3VudCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vdHMvd2FsbGV0L21vZGVsL01vbmVyb0NoZWNrUmVzZXJ2ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW9uZXJvQ2hlY2sgZnJvbSBcIi4vTW9uZXJvQ2hlY2tcIjtcblxuLyoqXG4gKiBSZXN1bHRzIGZyb20gY2hlY2tpbmcgYSByZXNlcnZlIHByb29mLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb25lcm9DaGVja1Jlc2VydmUgZXh0ZW5kcyBNb25lcm9DaGVjayB7XG4gIFxuICB0b3RhbEFtb3VudDogYmlnaW50O1xuICB1bmNvbmZpcm1lZFNwZW50QW1vdW50OiBiaWdpbnQ7XG4gIFxuICBjb25zdHJ1Y3RvcihjaGVjaz86IFBhcnRpYWw8TW9uZXJvQ2hlY2tSZXNlcnZlPikge1xuICAgIHN1cGVyKGNoZWNrKTtcbiAgICBpZiAodGhpcy50b3RhbEFtb3VudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiB0aGlzLnRvdGFsQW1vdW50ICE9PSBcImJpZ2ludFwiKSB0aGlzLnRvdGFsQW1vdW50ID0gQmlnSW50KHRoaXMudG90YWxBbW91bnQpO1xuICAgIGlmICh0aGlzLnVuY29uZmlybWVkU3BlbnRBbW91bnQgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgdGhpcy51bmNvbmZpcm1lZFNwZW50QW1vdW50ICE9PSBcImJpZ2ludFwiKSB0aGlzLnVuY29uZmlybWVkU3BlbnRBbW91bnQgPSBCaWdJbnQodGhpcy51bmNvbmZpcm1lZFNwZW50QW1vdW50KTtcbiAgfVxuICBcbiAgdG9Kc29uKCk6IGFueSB7XG4gICAgbGV0IGpzb246IGFueSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMpO1xuICAgIGlmICh0aGlzLmdldFRvdGFsQW1vdW50KCkgIT09IHVuZGVmaW5lZCkganNvbi50b3RhbEFtb3VudCA9IHRoaXMuZ2V0VG90YWxBbW91bnQoKS50b1N0cmluZygpO1xuICAgIGlmICh0aGlzLmdldFVuY29uZmlybWVkU3BlbnRBbW91bnQoKSAhPT0gdW5kZWZpbmVkKSBqc29uLnVuY29uZmlybWVkU3BlbnRBbW91bnQgPSB0aGlzLmdldFVuY29uZmlybWVkU3BlbnRBbW91bnQoKS50b1N0cmluZygpO1xuICAgIHJldHVybiBqc29uO1xuICB9XG4gIFxuICBnZXRUb3RhbEFtb3VudCgpOiBiaWdpbnQge1xuICAgIHJldHVybiB0aGlzLnRvdGFsQW1vdW50O1xuICB9XG5cbiAgc2V0VG90YWxBbW91bnQodG90YWxBbW91bnQ6IGJpZ2ludCk6IE1vbmVyb0NoZWNrUmVzZXJ2ZSB7XG4gICAgdGhpcy50b3RhbEFtb3VudCA9IHRvdGFsQW1vdW50O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIFxuICBnZXRVbmNvbmZpcm1lZFNwZW50QW1vdW50KCk6IGJpZ2ludCB7XG4gICAgcmV0dXJuIHRoaXMudW5jb25maXJtZWRTcGVudEFtb3VudDtcbiAgfVxuXG4gIHNldFVuY29uZmlybWVkU3BlbnRBbW91bnQodW5jb25maXJtZWRTcGVudEFtb3VudDogYmlnaW50KTogTW9uZXJvQ2hlY2tSZXNlcnZlIHtcbiAgICB0aGlzLnVuY29uZmlybWVkU3BlbnRBbW91bnQgPSB1bmNvbmZpcm1lZFNwZW50QW1vdW50O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59Il0sIm1hcHBpbmdzIjoieUxBQUEsSUFBQUEsWUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNlLE1BQU1DLGtCQUFrQixTQUFTQyxvQkFBVyxDQUFDOzs7OztFQUsxREMsV0FBV0EsQ0FBQ0MsS0FBbUMsRUFBRTtJQUMvQyxLQUFLLENBQUNBLEtBQUssQ0FBQztJQUNaLElBQUksSUFBSSxDQUFDQyxXQUFXLEtBQUtDLFNBQVMsSUFBSSxPQUFPLElBQUksQ0FBQ0QsV0FBVyxLQUFLLFFBQVEsRUFBRSxJQUFJLENBQUNBLFdBQVcsR0FBR0UsTUFBTSxDQUFDLElBQUksQ0FBQ0YsV0FBVyxDQUFDO0lBQ3ZILElBQUksSUFBSSxDQUFDRyxzQkFBc0IsS0FBS0YsU0FBUyxJQUFJLE9BQU8sSUFBSSxDQUFDRSxzQkFBc0IsS0FBSyxRQUFRLEVBQUUsSUFBSSxDQUFDQSxzQkFBc0IsR0FBR0QsTUFBTSxDQUFDLElBQUksQ0FBQ0Msc0JBQXNCLENBQUM7RUFDcks7O0VBRUFDLE1BQU1BLENBQUEsRUFBUTtJQUNaLElBQUlDLElBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDO0lBQ3ZDLElBQUksSUFBSSxDQUFDQyxjQUFjLENBQUMsQ0FBQyxLQUFLUCxTQUFTLEVBQUVJLElBQUksQ0FBQ0wsV0FBVyxHQUFHLElBQUksQ0FBQ1EsY0FBYyxDQUFDLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUM7SUFDNUYsSUFBSSxJQUFJLENBQUNDLHlCQUF5QixDQUFDLENBQUMsS0FBS1QsU0FBUyxFQUFFSSxJQUFJLENBQUNGLHNCQUFzQixHQUFHLElBQUksQ0FBQ08seUJBQXlCLENBQUMsQ0FBQyxDQUFDRCxRQUFRLENBQUMsQ0FBQztJQUM3SCxPQUFPSixJQUFJO0VBQ2I7O0VBRUFHLGNBQWNBLENBQUEsRUFBVztJQUN2QixPQUFPLElBQUksQ0FBQ1IsV0FBVztFQUN6Qjs7RUFFQVcsY0FBY0EsQ0FBQ1gsV0FBbUIsRUFBc0I7SUFDdEQsSUFBSSxDQUFDQSxXQUFXLEdBQUdBLFdBQVc7SUFDOUIsT0FBTyxJQUFJO0VBQ2I7O0VBRUFVLHlCQUF5QkEsQ0FBQSxFQUFXO0lBQ2xDLE9BQU8sSUFBSSxDQUFDUCxzQkFBc0I7RUFDcEM7O0VBRUFTLHlCQUF5QkEsQ0FBQ1Qsc0JBQThCLEVBQXNCO0lBQzVFLElBQUksQ0FBQ0Esc0JBQXNCLEdBQUdBLHNCQUFzQjtJQUNwRCxPQUFPLElBQUk7RUFDYjtBQUNGLENBQUNVLE9BQUEsQ0FBQUMsT0FBQSxHQUFBbEIsa0JBQUEifQ==