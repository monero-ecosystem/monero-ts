/**
 * Monero daemon info.
 */
export default class MoneroDaemonInfo {
    version: string;
    numAltBlocks: number;
    blockSizeLimit: number;
    blockSizeMedian: number;
    blockWeightLimit: number;
    blockWeightMedian: number;
    bootstrapDaemonAddress: string;
    difficulty: bigint;
    cumulativeDifficulty: bigint;
    freeSpace: bigint;
    numOfflinePeers: number;
    numOnlinePeers: number;
    height: number;
    heightWithoutBootstrap: number;
    networkType: string;
    isOffline: boolean;
    numIncomingConnections: number;
    numOutgoingConnections: number;
    numRpcConnections: number;
    startTimestamp: number;
    adjustedTimestamp: number;
    target: number;
    targetHeight: number;
    topBlockHash: string;
    numTxs: number;
    numTxsPool: number;
    wasBootstrapEverUsed: boolean;
    databaseSize: number;
    updateAvailable: boolean;
    credits: bigint;
    isBusySyncing: boolean;
    isSynchronized: boolean;
    isRestricted: boolean;
    constructor(info?: Partial<MoneroDaemonInfo>);
    toJson(): any;
    getVersion(): string;
    setVersion(version: string): MoneroDaemonInfo;
    getNumAltBlocks(): number;
    setNumAltBlocks(numAltBlocks: number): MoneroDaemonInfo;
    getBlockSizeLimit(): number;
    setBlockSizeLimit(blockSizeLimit: number): MoneroDaemonInfo;
    getBlockSizeMedian(): number;
    setBlockSizeMedian(blockSizeMedian: number): MoneroDaemonInfo;
    getBlockWeightLimit(): number;
    setBlockWeightLimit(blockWeightLimit: number): MoneroDaemonInfo;
    getBlockWeightMedian(): number;
    setBlockWeightMedian(blockWeightMedian: number): MoneroDaemonInfo;
    getBootstrapDaemonAddress(): string;
    setBootstrapDaemonAddress(bootstrapDaemonAddress: any): MoneroDaemonInfo;
    getDifficulty(): bigint;
    setDifficulty(difficulty: bigint): MoneroDaemonInfo;
    getCumulativeDifficulty(): bigint;
    setCumulativeDifficulty(cumulativeDifficulty: bigint): MoneroDaemonInfo;
    getFreeSpace(): bigint;
    setFreeSpace(freeSpace: bigint): MoneroDaemonInfo;
    getNumOfflinePeers(): number;
    setNumOfflinePeers(numOfflinePeers: number): MoneroDaemonInfo;
    getNumOnlinePeers(): number;
    setNumOnlinePeers(numOnlinePeers: number): MoneroDaemonInfo;
    getHeight(): number;
    setHeight(height: number): MoneroDaemonInfo;
    getHeightWithoutBootstrap(): number;
    setHeightWithoutBootstrap(heightWithoutBootstrap: number): MoneroDaemonInfo;
    getNetworkType(): string;
    setNetworkType(networkType: string): this;
    getIsOffline(): boolean;
    setIsOffline(isOffline: boolean): MoneroDaemonInfo;
    getNumIncomingConnections(): number;
    setNumIncomingConnections(numIncomingConnections: number): MoneroDaemonInfo;
    getNumOutgoingConnections(): number;
    setNumOutgoingConnections(numOutgoingConnections: number): MoneroDaemonInfo;
    getNumRpcConnections(): number;
    setNumRpcConnections(numRpcConnections: number): MoneroDaemonInfo;
    getStartTimestamp(): number;
    setStartTimestamp(startTimestamp: number): MoneroDaemonInfo;
    getAdjustedTimestamp(): number;
    setAdjustedTimestamp(adjustedTimestamp: number): MoneroDaemonInfo;
    getTarget(): number;
    setTarget(target: number): MoneroDaemonInfo;
    getTargetHeight(): number;
    setTargetHeight(targetHeight: number): MoneroDaemonInfo;
    getTopBlockHash(): string;
    setTopBlockHash(topBlockHash: any): MoneroDaemonInfo;
    getNumTxs(): number;
    setNumTxs(numTxs: number): MoneroDaemonInfo;
    getNumTxsPool(): number;
    setNumTxsPool(numTxsPool: any): MoneroDaemonInfo;
    getWasBootstrapEverUsed(): boolean;
    setWasBootstrapEverUsed(wasBootstrapEverUsed: any): MoneroDaemonInfo;
    getDatabaseSize(): number;
    setDatabaseSize(databaseSize: number): MoneroDaemonInfo;
    getUpdateAvailable(): boolean;
    setUpdateAvailable(updateAvailable: boolean): MoneroDaemonInfo;
    getCredits(): bigint;
    setCredits(credits: bigint): MoneroDaemonInfo;
    getIsBusySyncing(): boolean;
    setIsBusySyncing(isBusySyncing: boolean): MoneroDaemonInfo;
    getIsSynchronized(): boolean;
    setIsSynchronized(isSynchronized: boolean): MoneroDaemonInfo;
    getIsRestricted(): boolean;
    setIsRestricted(isRestricted: boolean): MoneroDaemonInfo;
}
