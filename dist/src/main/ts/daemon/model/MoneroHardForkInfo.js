"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
 * Monero hard fork info.
 */
class MoneroHardForkInfo {












  constructor(info) {
    Object.assign(this, info);
    if (this.credits !== undefined && typeof this.credits !== "bigint") this.credits = BigInt(this.credits);
  }

  toJson() {
    let json = Object.assign({}, this);
    if (json.credits !== undefined) json.credits = json.credits.toString();
    return json;
  }

  getEarliestHeight() {
    return this.earliestHeight;
  }

  setEarliestHeight(earliestHeight) {
    this.earliestHeight = earliestHeight;
    return this;
  }

  getIsEnabled() {
    return this.isEnabled;
  }

  setIsEnabled(isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  getState() {
    return this.state;
  }

  setState(state) {
    this.state = state;
    return this;
  }

  getThreshold() {
    return this.threshold;
  }

  setThreshold(threshold) {
    this.threshold = threshold;
    return this;
  }

  getVersion() {
    return this.version;
  }

  setVersion(version) {
    this.version = version;
    return this;
  }

  getNumVotes() {
    return this.numVotes;
  }

  setNumVotes(numVotes) {
    this.numVotes = numVotes;
    return this;
  }

  getWindow() {
    return this.window;
  }

  setWindow(window) {
    this.window = window;
    return this;
  }

  getVoting() {
    return this.voting;
  }

  setVoting(voting) {
    this.voting = voting;
    return this;
  }

  getCredits() {
    return this.credits;
  }

  setCredits(credits) {
    this.credits = credits;
    return this;
  }

  getTopBlockHash() {
    return this.topBlockHash;
  }

  setTopBlockHash(topBlockHash) {
    this.topBlockHash = topBlockHash;
    return this;
  }
}exports.default = MoneroHardForkInfo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb25lcm9IYXJkRm9ya0luZm8iLCJjb25zdHJ1Y3RvciIsImluZm8iLCJPYmplY3QiLCJhc3NpZ24iLCJjcmVkaXRzIiwidW5kZWZpbmVkIiwiQmlnSW50IiwidG9Kc29uIiwianNvbiIsInRvU3RyaW5nIiwiZ2V0RWFybGllc3RIZWlnaHQiLCJlYXJsaWVzdEhlaWdodCIsInNldEVhcmxpZXN0SGVpZ2h0IiwiZ2V0SXNFbmFibGVkIiwiaXNFbmFibGVkIiwic2V0SXNFbmFibGVkIiwiZ2V0U3RhdGUiLCJzdGF0ZSIsInNldFN0YXRlIiwiZ2V0VGhyZXNob2xkIiwidGhyZXNob2xkIiwic2V0VGhyZXNob2xkIiwiZ2V0VmVyc2lvbiIsInZlcnNpb24iLCJzZXRWZXJzaW9uIiwiZ2V0TnVtVm90ZXMiLCJudW1Wb3RlcyIsInNldE51bVZvdGVzIiwiZ2V0V2luZG93Iiwid2luZG93Iiwic2V0V2luZG93IiwiZ2V0Vm90aW5nIiwidm90aW5nIiwic2V0Vm90aW5nIiwiZ2V0Q3JlZGl0cyIsInNldENyZWRpdHMiLCJnZXRUb3BCbG9ja0hhc2giLCJ0b3BCbG9ja0hhc2giLCJzZXRUb3BCbG9ja0hhc2giLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3RzL2RhZW1vbi9tb2RlbC9Nb25lcm9IYXJkRm9ya0luZm8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb25lcm8gaGFyZCBmb3JrIGluZm8uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vbmVyb0hhcmRGb3JrSW5mbyB7XG5cbiAgZWFybGllc3RIZWlnaHQ6IG51bWJlcjtcbiAgaXNFbmFibGVkOiBib29sZWFuO1xuICBzdGF0ZTogc3RyaW5nO1xuICB0aHJlc2hvbGQ6IG51bWJlcjtcbiAgdmVyc2lvbjogbnVtYmVyO1xuICBudW1Wb3RlczogbnVtYmVyO1xuICB3aW5kb3c6IG51bWJlcjtcbiAgdm90aW5nOiBudW1iZXI7XG4gIGNyZWRpdHM6IGJpZ2ludDtcbiAgdG9wQmxvY2tIYXNoOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoaW5mbz86IFBhcnRpYWw8TW9uZXJvSGFyZEZvcmtJbmZvPikge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5mbyk7XG4gICAgaWYgKHRoaXMuY3JlZGl0cyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiB0aGlzLmNyZWRpdHMgIT09IFwiYmlnaW50XCIpIHRoaXMuY3JlZGl0cyA9IEJpZ0ludCh0aGlzLmNyZWRpdHMpO1xuICB9XG4gIFxuICB0b0pzb24oKTogYW55IHtcbiAgICBsZXQganNvbjogYW55ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcyk7XG4gICAgaWYgKGpzb24uY3JlZGl0cyAhPT0gdW5kZWZpbmVkKSBqc29uLmNyZWRpdHMgPSBqc29uLmNyZWRpdHMudG9TdHJpbmcoKTtcbiAgICByZXR1cm4ganNvbjtcbiAgfVxuICBcbiAgZ2V0RWFybGllc3RIZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5lYXJsaWVzdEhlaWdodDtcbiAgfVxuXG4gIHNldEVhcmxpZXN0SGVpZ2h0KGVhcmxpZXN0SGVpZ2h0OiBudW1iZXIpOiBNb25lcm9IYXJkRm9ya0luZm8ge1xuICAgIHRoaXMuZWFybGllc3RIZWlnaHQgPSBlYXJsaWVzdEhlaWdodDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldElzRW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pc0VuYWJsZWQ7XG4gIH1cblxuICBzZXRJc0VuYWJsZWQoaXNFbmFibGVkOiBib29sZWFuKTogTW9uZXJvSGFyZEZvcmtJbmZvIHtcbiAgICB0aGlzLmlzRW5hYmxlZCA9IGlzRW5hYmxlZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldFN0YXRlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gIH1cblxuICBzZXRTdGF0ZShzdGF0ZTogc3RyaW5nKTogTW9uZXJvSGFyZEZvcmtJbmZvIHtcbiAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBnZXRUaHJlc2hvbGQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy50aHJlc2hvbGQ7XG4gIH1cblxuICBzZXRUaHJlc2hvbGQodGhyZXNob2xkOiBudW1iZXIpOiBNb25lcm9IYXJkRm9ya0luZm8ge1xuICAgIHRoaXMudGhyZXNob2xkID0gdGhyZXNob2xkO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0VmVyc2lvbigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnZlcnNpb247XG4gIH1cblxuICBzZXRWZXJzaW9uKHZlcnNpb246IG51bWJlcik6IE1vbmVyb0hhcmRGb3JrSW5mbyB7XG4gICAgdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldE51bVZvdGVzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMubnVtVm90ZXM7XG4gIH1cblxuICBzZXROdW1Wb3RlcyhudW1Wb3RlczogbnVtYmVyKTogTW9uZXJvSGFyZEZvcmtJbmZvIHtcbiAgICB0aGlzLm51bVZvdGVzID0gbnVtVm90ZXM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBnZXRXaW5kb3coKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy53aW5kb3c7XG4gIH1cblxuICBzZXRXaW5kb3cod2luZG93OiBudW1iZXIpOiBNb25lcm9IYXJkRm9ya0luZm8ge1xuICAgIHRoaXMud2luZG93ID0gd2luZG93O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0Vm90aW5nKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudm90aW5nO1xuICB9XG5cbiAgc2V0Vm90aW5nKHZvdGluZzogbnVtYmVyKTogTW9uZXJvSGFyZEZvcmtJbmZvIHtcbiAgICB0aGlzLnZvdGluZyA9IHZvdGluZztcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBcbiAgZ2V0Q3JlZGl0cygpOiBiaWdpbnR7XG4gICAgcmV0dXJuIHRoaXMuY3JlZGl0cztcbiAgfVxuICBcbiAgc2V0Q3JlZGl0cyhjcmVkaXRzOiBiaWdpbnQpOiBNb25lcm9IYXJkRm9ya0luZm8ge1xuICAgIHRoaXMuY3JlZGl0cyA9IGNyZWRpdHM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgXG4gIGdldFRvcEJsb2NrSGFzaCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnRvcEJsb2NrSGFzaDtcbiAgfVxuICBcbiAgc2V0VG9wQmxvY2tIYXNoKHRvcEJsb2NrSGFzaDogc3RyaW5nKTogTW9uZXJvSGFyZEZvcmtJbmZvIHtcbiAgICB0aGlzLnRvcEJsb2NrSGFzaCA9IHRvcEJsb2NrSGFzaDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoicUdBQUE7QUFDQTtBQUNBO0FBQ2UsTUFBTUEsa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7RUFhdENDLFdBQVdBLENBQUNDLElBQWtDLEVBQUU7SUFDOUNDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLElBQUksRUFBRUYsSUFBSSxDQUFDO0lBQ3pCLElBQUksSUFBSSxDQUFDRyxPQUFPLEtBQUtDLFNBQVMsSUFBSSxPQUFPLElBQUksQ0FBQ0QsT0FBTyxLQUFLLFFBQVEsRUFBRSxJQUFJLENBQUNBLE9BQU8sR0FBR0UsTUFBTSxDQUFDLElBQUksQ0FBQ0YsT0FBTyxDQUFDO0VBQ3pHOztFQUVBRyxNQUFNQSxDQUFBLEVBQVE7SUFDWixJQUFJQyxJQUFTLEdBQUdOLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQztJQUN2QyxJQUFJSyxJQUFJLENBQUNKLE9BQU8sS0FBS0MsU0FBUyxFQUFFRyxJQUFJLENBQUNKLE9BQU8sR0FBR0ksSUFBSSxDQUFDSixPQUFPLENBQUNLLFFBQVEsQ0FBQyxDQUFDO0lBQ3RFLE9BQU9ELElBQUk7RUFDYjs7RUFFQUUsaUJBQWlCQSxDQUFBLEVBQVc7SUFDMUIsT0FBTyxJQUFJLENBQUNDLGNBQWM7RUFDNUI7O0VBRUFDLGlCQUFpQkEsQ0FBQ0QsY0FBc0IsRUFBc0I7SUFDNUQsSUFBSSxDQUFDQSxjQUFjLEdBQUdBLGNBQWM7SUFDcEMsT0FBTyxJQUFJO0VBQ2I7O0VBRUFFLFlBQVlBLENBQUEsRUFBWTtJQUN0QixPQUFPLElBQUksQ0FBQ0MsU0FBUztFQUN2Qjs7RUFFQUMsWUFBWUEsQ0FBQ0QsU0FBa0IsRUFBc0I7SUFDbkQsSUFBSSxDQUFDQSxTQUFTLEdBQUdBLFNBQVM7SUFDMUIsT0FBTyxJQUFJO0VBQ2I7O0VBRUFFLFFBQVFBLENBQUEsRUFBVztJQUNqQixPQUFPLElBQUksQ0FBQ0MsS0FBSztFQUNuQjs7RUFFQUMsUUFBUUEsQ0FBQ0QsS0FBYSxFQUFzQjtJQUMxQyxJQUFJLENBQUNBLEtBQUssR0FBR0EsS0FBSztJQUNsQixPQUFPLElBQUk7RUFDYjs7RUFFQUUsWUFBWUEsQ0FBQSxFQUFXO0lBQ3JCLE9BQU8sSUFBSSxDQUFDQyxTQUFTO0VBQ3ZCOztFQUVBQyxZQUFZQSxDQUFDRCxTQUFpQixFQUFzQjtJQUNsRCxJQUFJLENBQUNBLFNBQVMsR0FBR0EsU0FBUztJQUMxQixPQUFPLElBQUk7RUFDYjs7RUFFQUUsVUFBVUEsQ0FBQSxFQUFXO0lBQ25CLE9BQU8sSUFBSSxDQUFDQyxPQUFPO0VBQ3JCOztFQUVBQyxVQUFVQSxDQUFDRCxPQUFlLEVBQXNCO0lBQzlDLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLE9BQU8sSUFBSTtFQUNiOztFQUVBRSxXQUFXQSxDQUFBLEVBQVc7SUFDcEIsT0FBTyxJQUFJLENBQUNDLFFBQVE7RUFDdEI7O0VBRUFDLFdBQVdBLENBQUNELFFBQWdCLEVBQXNCO0lBQ2hELElBQUksQ0FBQ0EsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLE9BQU8sSUFBSTtFQUNiOztFQUVBRSxTQUFTQSxDQUFBLEVBQVc7SUFDbEIsT0FBTyxJQUFJLENBQUNDLE1BQU07RUFDcEI7O0VBRUFDLFNBQVNBLENBQUNELE1BQWMsRUFBc0I7SUFDNUMsSUFBSSxDQUFDQSxNQUFNLEdBQUdBLE1BQU07SUFDcEIsT0FBTyxJQUFJO0VBQ2I7O0VBRUFFLFNBQVNBLENBQUEsRUFBVztJQUNsQixPQUFPLElBQUksQ0FBQ0MsTUFBTTtFQUNwQjs7RUFFQUMsU0FBU0EsQ0FBQ0QsTUFBYyxFQUFzQjtJQUM1QyxJQUFJLENBQUNBLE1BQU0sR0FBR0EsTUFBTTtJQUNwQixPQUFPLElBQUk7RUFDYjs7RUFFQUUsVUFBVUEsQ0FBQSxFQUFVO0lBQ2xCLE9BQU8sSUFBSSxDQUFDOUIsT0FBTztFQUNyQjs7RUFFQStCLFVBQVVBLENBQUMvQixPQUFlLEVBQXNCO0lBQzlDLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLE9BQU8sSUFBSTtFQUNiOztFQUVBZ0MsZUFBZUEsQ0FBQSxFQUFXO0lBQ3hCLE9BQU8sSUFBSSxDQUFDQyxZQUFZO0VBQzFCOztFQUVBQyxlQUFlQSxDQUFDRCxZQUFvQixFQUFzQjtJQUN4RCxJQUFJLENBQUNBLFlBQVksR0FBR0EsWUFBWTtJQUNoQyxPQUFPLElBQUk7RUFDYjtBQUNGLENBQUNFLE9BQUEsQ0FBQUMsT0FBQSxHQUFBekMsa0JBQUEifQ==