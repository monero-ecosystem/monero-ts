"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
 * Models the result from submitting a tx to a daemon.
 */
class MoneroSubmitTxResult {

















  constructor(result) {
    Object.assign(this, result);
    if (this.credits !== undefined && typeof this.credits !== "bigint") this.credits = BigInt(this.credits);
  }

  toJson() {
    let json = Object.assign({}, this);
    if (json.credits !== undefined) json.credits = json.credits.toString();
    return json;
  }

  getIsGood() {
    return this.isGood;
  }

  setIsGood(isGood) {
    this.isGood = isGood;
    return this;
  }

  getIsRelayed() {
    return this.isRelayed;
  }

  setIsRelayed(isRelayed) {
    this.isRelayed = isRelayed;
    return this;
  }

  getIsDoubleSpendSeen() {
    return this.isDoubleSpendSeen;
  }

  setIsDoubleSpendSeen(isDoubleSpendSeen) {
    this.isDoubleSpendSeen = isDoubleSpendSeen;
    return this;
  }

  getIsFeeTooLow() {
    return this.isFeeTooLow;
  }

  setIsFeeTooLow(isFeeTooLow) {
    this.isFeeTooLow = isFeeTooLow;
    return this;
  }

  getIsMixinTooLow() {
    return this.isMixinTooLow;
  }

  setIsMixinTooLow(isMixinTooLow) {
    this.isMixinTooLow = isMixinTooLow;
    return this;
  }

  getHasInvalidInput() {
    return this.hasInvalidInput;
  }

  setHasInvalidInput(hasInvalidInput) {
    this.hasInvalidInput = hasInvalidInput;
    return this;
  }

  getHasInvalidOutput() {
    return this.hasInvalidOutput;
  }

  setHasInvalidOutput(hasInvalidOutput) {
    this.hasInvalidOutput = hasInvalidOutput;
    return this;
  }

  getHasTooFewOutputs() {
    return this.hasTooFewOutputs;
  }

  setHasTooFewOutputs(hasTooFewOutputs) {
    this.hasTooFewOutputs = hasTooFewOutputs;
    return this;
  }

  getIsOverspend() {
    return this.isOverspend;
  }

  setIsOverspend(isOverspend) {
    this.isOverspend = isOverspend;
    return this;
  }

  getReason() {
    return this.reason;
  }

  setReason(reason) {
    this.reason = reason;
    return this;
  }

  getIsTooBig() {
    return this.isTooBig;
  }

  setIsTooBig(isTooBig) {
    this.isTooBig = isTooBig;
    return this;
  }

  getSanityCheckFailed() {
    return this.sanityCheckFailed;
  }

  setSanityCheckFailed(sanityCheckFailed) {
    this.sanityCheckFailed = sanityCheckFailed;
    return this;
  }

  getCredits() {
    return this.credits;
  }

  setCredits(credits) {
    this.credits = credits;
    return this;
  }

  getTopBlockHash() {
    return this.topBlockHash;
  }

  setTopBlockHash(topBlockHash) {
    this.topBlockHash = topBlockHash;
    return this;
  }

  getIsTxExtraTooBig() {
    return this.isTxExtraTooBig;
  }

  setIsTxExtraTooBig(isTxExtraTooBig) {
    this.isTxExtraTooBig = isTxExtraTooBig;
    return this;
  }
}exports.default = MoneroSubmitTxResult;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,