"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
 * Entry in a Monero output histogram (see get_output_histogram of Daemon RPC documentation).
 */
class MoneroOutputHistogramEntry {






  constructor(entry) {
    Object.assign(this, entry);
    if (this.amount !== undefined && typeof this.amount !== "bigint") this.amount = BigInt(this.amount);
  }

  toJson() {
    let json = Object.assign({}, this);
    if (json.amount !== undefined) json.amount = json.amount.toString();
    return json;
  }

  getAmount() {
    return this.amount;
  }

  setAmount(amount) {
    this.amount = amount;
    return this;
  }

  getNumInstances() {
    return this.numInstances;
  }

  setNumInstances(numInstances) {
    this.numInstances = numInstances;
    return this;
  }

  getNumUnlockedInstances() {
    return this.numUnlockedInstances;
  }

  setNumUnlockedInstances(numUnlockedInstances) {
    this.numUnlockedInstances = numUnlockedInstances;
    return this;
  }

  getNumRecentInstances() {
    return this.numRecentInstances;
  }

  setNumRecentInstances(numRecentInstances) {
    this.numRecentInstances = numRecentInstances;
    return this;
  }
}exports.default = MoneroOutputHistogramEntry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb25lcm9PdXRwdXRIaXN0b2dyYW1FbnRyeSIsImNvbnN0cnVjdG9yIiwiZW50cnkiLCJPYmplY3QiLCJhc3NpZ24iLCJhbW91bnQiLCJ1bmRlZmluZWQiLCJCaWdJbnQiLCJ0b0pzb24iLCJqc29uIiwidG9TdHJpbmciLCJnZXRBbW91bnQiLCJzZXRBbW91bnQiLCJnZXROdW1JbnN0YW5jZXMiLCJudW1JbnN0YW5jZXMiLCJzZXROdW1JbnN0YW5jZXMiLCJnZXROdW1VbmxvY2tlZEluc3RhbmNlcyIsIm51bVVubG9ja2VkSW5zdGFuY2VzIiwic2V0TnVtVW5sb2NrZWRJbnN0YW5jZXMiLCJnZXROdW1SZWNlbnRJbnN0YW5jZXMiLCJudW1SZWNlbnRJbnN0YW5jZXMiLCJzZXROdW1SZWNlbnRJbnN0YW5jZXMiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3RzL2RhZW1vbi9tb2RlbC9Nb25lcm9PdXRwdXRIaXN0b2dyYW1FbnRyeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVudHJ5IGluIGEgTW9uZXJvIG91dHB1dCBoaXN0b2dyYW0gKHNlZSBnZXRfb3V0cHV0X2hpc3RvZ3JhbSBvZiBEYWVtb24gUlBDIGRvY3VtZW50YXRpb24pLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb25lcm9PdXRwdXRIaXN0b2dyYW1FbnRyeSB7XG5cbiAgYW1vdW50OiBiaWdpbnQ7XG4gIG51bUluc3RhbmNlczogbnVtYmVyO1xuICBudW1VbmxvY2tlZEluc3RhbmNlczogbnVtYmVyO1xuICBudW1SZWNlbnRJbnN0YW5jZXM6IG51bWJlcjtcbiAgXG4gIGNvbnN0cnVjdG9yKGVudHJ5PzogTW9uZXJvT3V0cHV0SGlzdG9ncmFtRW50cnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGVudHJ5KTtcbiAgICBpZiAodGhpcy5hbW91bnQgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgdGhpcy5hbW91bnQgIT09IFwiYmlnaW50XCIpIHRoaXMuYW1vdW50ID0gQmlnSW50KHRoaXMuYW1vdW50KTtcbiAgfVxuICBcbiAgdG9Kc29uKCk6IGFueSB7XG4gICAgbGV0IGpzb246IGFueSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMpO1xuICAgIGlmIChqc29uLmFtb3VudCAhPT0gdW5kZWZpbmVkKSBqc29uLmFtb3VudCA9IGpzb24uYW1vdW50LnRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIGpzb247XG4gIH1cbiAgXG4gIGdldEFtb3VudCgpOiBiaWdpbnQge1xuICAgIHJldHVybiB0aGlzLmFtb3VudDtcbiAgfVxuICBcbiAgc2V0QW1vdW50KGFtb3VudDogYmlnaW50KTogTW9uZXJvT3V0cHV0SGlzdG9ncmFtRW50cnkge1xuICAgIHRoaXMuYW1vdW50ID0gYW1vdW50O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0TnVtSW5zdGFuY2VzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMubnVtSW5zdGFuY2VzO1xuICB9XG5cbiAgc2V0TnVtSW5zdGFuY2VzKG51bUluc3RhbmNlczogbnVtYmVyKTogTW9uZXJvT3V0cHV0SGlzdG9ncmFtRW50cnkge1xuICAgIHRoaXMubnVtSW5zdGFuY2VzID0gbnVtSW5zdGFuY2VzO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0TnVtVW5sb2NrZWRJbnN0YW5jZXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5udW1VbmxvY2tlZEluc3RhbmNlcztcbiAgfVxuXG4gIHNldE51bVVubG9ja2VkSW5zdGFuY2VzKG51bVVubG9ja2VkSW5zdGFuY2VzOiBudW1iZXIpIHtcbiAgICB0aGlzLm51bVVubG9ja2VkSW5zdGFuY2VzID0gbnVtVW5sb2NrZWRJbnN0YW5jZXM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBnZXROdW1SZWNlbnRJbnN0YW5jZXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5udW1SZWNlbnRJbnN0YW5jZXM7XG4gIH1cblxuICBzZXROdW1SZWNlbnRJbnN0YW5jZXMobnVtUmVjZW50SW5zdGFuY2VzOiBudW1iZXIpOiBNb25lcm9PdXRwdXRIaXN0b2dyYW1FbnRyeSB7XG4gICAgdGhpcy5udW1SZWNlbnRJbnN0YW5jZXMgPSBudW1SZWNlbnRJbnN0YW5jZXM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6InFHQUFBO0FBQ0E7QUFDQTtBQUNlLE1BQU1BLDBCQUEwQixDQUFDOzs7Ozs7O0VBTzlDQyxXQUFXQSxDQUFDQyxLQUFrQyxFQUFFO0lBQzlDQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLEVBQUVGLEtBQUssQ0FBQztJQUMxQixJQUFJLElBQUksQ0FBQ0csTUFBTSxLQUFLQyxTQUFTLElBQUksT0FBTyxJQUFJLENBQUNELE1BQU0sS0FBSyxRQUFRLEVBQUUsSUFBSSxDQUFDQSxNQUFNLEdBQUdFLE1BQU0sQ0FBQyxJQUFJLENBQUNGLE1BQU0sQ0FBQztFQUNyRzs7RUFFQUcsTUFBTUEsQ0FBQSxFQUFRO0lBQ1osSUFBSUMsSUFBUyxHQUFHTixNQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUM7SUFDdkMsSUFBSUssSUFBSSxDQUFDSixNQUFNLEtBQUtDLFNBQVMsRUFBRUcsSUFBSSxDQUFDSixNQUFNLEdBQUdJLElBQUksQ0FBQ0osTUFBTSxDQUFDSyxRQUFRLENBQUMsQ0FBQztJQUNuRSxPQUFPRCxJQUFJO0VBQ2I7O0VBRUFFLFNBQVNBLENBQUEsRUFBVztJQUNsQixPQUFPLElBQUksQ0FBQ04sTUFBTTtFQUNwQjs7RUFFQU8sU0FBU0EsQ0FBQ1AsTUFBYyxFQUE4QjtJQUNwRCxJQUFJLENBQUNBLE1BQU0sR0FBR0EsTUFBTTtJQUNwQixPQUFPLElBQUk7RUFDYjs7RUFFQVEsZUFBZUEsQ0FBQSxFQUFXO0lBQ3hCLE9BQU8sSUFBSSxDQUFDQyxZQUFZO0VBQzFCOztFQUVBQyxlQUFlQSxDQUFDRCxZQUFvQixFQUE4QjtJQUNoRSxJQUFJLENBQUNBLFlBQVksR0FBR0EsWUFBWTtJQUNoQyxPQUFPLElBQUk7RUFDYjs7RUFFQUUsdUJBQXVCQSxDQUFBLEVBQVc7SUFDaEMsT0FBTyxJQUFJLENBQUNDLG9CQUFvQjtFQUNsQzs7RUFFQUMsdUJBQXVCQSxDQUFDRCxvQkFBNEIsRUFBRTtJQUNwRCxJQUFJLENBQUNBLG9CQUFvQixHQUFHQSxvQkFBb0I7SUFDaEQsT0FBTyxJQUFJO0VBQ2I7O0VBRUFFLHFCQUFxQkEsQ0FBQSxFQUFXO0lBQzlCLE9BQU8sSUFBSSxDQUFDQyxrQkFBa0I7RUFDaEM7O0VBRUFDLHFCQUFxQkEsQ0FBQ0Qsa0JBQTBCLEVBQThCO0lBQzVFLElBQUksQ0FBQ0Esa0JBQWtCLEdBQUdBLGtCQUFrQjtJQUM1QyxPQUFPLElBQUk7RUFDYjtBQUNGLENBQUNFLE9BQUEsQ0FBQUMsT0FBQSxHQUFBdkIsMEJBQUEifQ==